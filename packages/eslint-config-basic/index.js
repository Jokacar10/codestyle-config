// @ts-check
const prettierConfig = require("@so1ve/prettier-config");
const { defineConfig } = require("eslint-define-config");

module.exports = defineConfig({
  env: {
    es6: true,
    browser: true,
    node: true,
  },
  reportUnusedDisableDirectives: true,
  plugins: [
    "@so1ve",
    "@html-eslint",
    "@so1ve/prettier",
    "jsdoc",
    "unicorn",
    "unused-imports",
    "no-only-tests",
  ],
  extends: [
    "./standard",
    "plugin:import/recommended",
    "plugin:eslint-comments/recommended",
    "plugin:jsonc/recommended-with-jsonc",
    "plugin:yml/standard",
    "plugin:markdown/recommended",
    "plugin:json-schema-validator/recommended",
    "plugin:toml/standard",
    "plugin:array-func/all",
  ],
  ignorePatterns: [
    "*.min.*",
    "*.d.ts",
    "CHANGELOG.md",
    "dist*",
    "release",
    "LICENSE*",
    "output",
    "out",
    "coverage",
    "public",
    "!src/public",
    "temp",
    "package-lock.json",
    "pnpm-lock.yaml",
    "yarn.lock",
    "__snapshots__",
    // ignore for in lint-staged
    "*.css",
    "*.png",
    "*.ico",
    "*.patch",
    "*.txt",
    "*.crt",
    "*.key",
    // force include
    "!.github",
    "!.vitepress",
    "!.vscode",
    // force exclude
    ".vitepress/cache",
  ],
  settings: {
    "import/resolver": {
      node: { extensions: [".js", ".mjs"] },
    },
  },
  overrides: [
    {
      files: ["*.html"],
      parser: "@html-eslint/parser",
      extends: ["plugin:@html-eslint/recommended"],
      rules: {
        "@html-eslint/no-multiple-empty-lines": ["warn", { max: 1 }],
        "@html-eslint/indent": "off",
        "@html-eslint/no-trailing-spaces": "off",
        "@html-eslint/require-closing-tags": "off",
        "@html-eslint/no-extra-spacing-attrs": "off",
        "@html-eslint/quotes": "off",
        "@so1ve/prettier/prettier": ["warn", { parser: "angular" }],
      },
    },
    {
      files: ["*.json", "*.json5"],
      parser: "jsonc-eslint-parser",
      rules: {
        "jsonc/quotes": ["warn", "double"],
        "jsonc/quote-props": ["warn", "always"],
        "jsonc/array-bracket-spacing": ["warn", "never"],
        "jsonc/comma-dangle": ["warn", "never"],
        "jsonc/comma-style": ["warn", "last"],
        "jsonc/indent": ["warn", 2],
        "jsonc/key-spacing": [
          "warn",
          { beforeColon: false, afterColon: true },
        ],
        "jsonc/no-octal-escape": "warn",
        "jsonc/object-curly-newline": [
          "warn",
          { multiline: true, consistent: true },
        ],
        "jsonc/object-property-newline": [
          "warn",
          { allowMultiplePropertiesPerLine: true },
        ],
        "eol-last": "warn",
        "@so1ve/prettier/prettier": [
          "warn",
          { ...prettierConfig, trailingComma: "none" },
        ],
      },
    },
    {
      files: ["*.yaml", "*.yml"],
      parser: "yaml-eslint-parser",
      rules: {
        "spaced-comment": "off",
      },
    },
    {
      files: ["*.toml"],
      parser: "toml-eslint-parser",
      rules: {
        "@so1ve/prettier/prettier": [
          "warn",
          { ...prettierConfig, parser: "toml" },
        ],
      },
    },
    {
      files: ["package.json"],
      parser: "jsonc-eslint-parser",
      rules: {
        "jsonc/sort-keys": [
          "warn",
          {
            pathPattern: "^$",
            order: [
              "name",
              "displayName",
              "private",
              "version",
              "packageManager",
              "publisher",
              "author",
              "contributors",
              "description",
              "keywords",
              "type",
              "homepage",
              "repository",
              "bugs",
              "funding",
              "categories",
              "license",
              "sideEffects",
              "exports",
              "main",
              "module",
              "unpkg",
              "jsdelivr",
              "types",
              "typesVersions",
              "bin",
              "icon",
              "files",
              "engines",
              "activationEvents",
              "contributes",
              "publishConfig",
              "scripts",
              "peerDependencies",
              "dependencies",
              "devDependencies",
              "optionalDependencies",
              "peerDependenciesMeta",
              "pnpm",
              "overrides",
              "resolutions",
              "husky",
              "simple-git-hooks",
              "lint-staged",
              "eslintConfig",
            ],
          },
          {
            pathPattern: "^(scripts|exports)$",
            order: { type: "asc" },
          },
          {
            pathPattern: "^(?:dev|peer|optional|bundled)?[Dd]ependencies$",
            order: { type: "asc" },
          },
          {
            pathPattern: "^exports.*$",
            order: ["types", "require", "import"],
          },
        ],
      },
    },
    {
      files: ["*.d.ts"],
      rules: {
        "import/no-duplicates": "off",
      },
    },
    {
      files: ["*.js", "*.cjs", "*.jsx"],
      rules: {
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-require-imports": "off",
      },
    },
    {
      files: ["*.ts", "*.tsx", "*.mts", "*.cts"],
      rules: {
        "no-void": ["warn", { allowAsStatement: true }],
      },
    },
    {
      files: ["scripts/**/*.*", "cli.*"],
      rules: {
        "no-console": "off",
      },
    },
    {
      files: ["*.test.ts", "*.test.js", "*.spec.ts", "*.spec.js"],
      rules: {
        "no-unused-expressions": "off",
        "no-only-tests/no-only-tests": "warn",
      },
    },
    {
      // Code blocks in markdown file
      files: ["**/*.md/*.*"],
      rules: {
        "@typescript-eslint/no-redeclare": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/consistent-type-imports": "off",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-require-imports": "off",
        "import/no-unresolved": "off",
        "unused-imports/no-unused-imports": "off",
        "unused-imports/no-unused-vars": "off",
        "no-alert": "off",
        "no-console": "off",
        "no-restricted-imports": "off",
        "no-undef": "off",
        "no-unused-expressions": "off",
        "no-unused-vars": "off",
        "no-multiple-empty-lines": ["warn", { max: 1, maxEOF: 0 }],
      },
    },
  ],
  rules: {
    // import
    "import/order": [
      "warn",
      {
        "newlines-between": "always",
        "warnOnUnassignedImports": true,
      },
    ],
    "import/first": "warn",
    "import/no-mutable-exports": "warn",
    "import/no-unresolved": "off",
    "import/no-absolute-path": "off",
    "import/namespace": "off", // Disable this for better performance

    // array-func
    "array-func/prefer-array-from": "off",

    // Common
    "array-bracket-newline": "off",
    "array-bracket-spacing": "off",
    "array-element-newline": "off",
    "arrow-body-style": "off",
    "arrow-parens": "off",
    "arrow-spacing": "off",
    "block-spacing": "off",
    "brace-style": "off",
    "comma-dangle": "off",
    "comma-spacing": "off",
    "comma-style": "off",
    "computed-property-spacing": "off",
    "curly": ["warn", "all"],
    "dot-location": "off",
    "eol-last": "off",
    "func-call-spacing": "off",
    "function-call-argument-newline": "off",
    "function-paren-newline": "off",
    "generator-star": "off",
    "generator-star-spacing": "off",
    "implicit-arrow-linebreak": "off",
    "indent": "off",
    "indent-legacy": "off",
    "jsx-quotes": "off",
    "key-spacing": "off",
    "keyword-spacing": "off",
    "linebreak-style": "off",
    "max-len": "off",
    "multiline-ternary": "off",
    "new-parens": "off",
    "newline-per-chained-call": "off",
    "no-arrow-condition": "off",
    "no-comma-dangle": "off",
    "no-confusing-arrow": "off",
    "no-extra-semi": "off",
    "no-floating-decimal": "off",
    "no-mixed-spaces-and-tabs": "off",
    "no-multi-spaces": "off",
    "no-multiple-empty-lines": "off",
    "no-reserved-keys": "off",
    "no-spaced-func": "off",
    "no-space-before-semi": "off",
    "no-tabs": "off",
    "no-trailing-spaces": "off",
    "no-whitespace-before-property": "off",
    "no-wrap-func": "off",
    "nonblock-statement-body-position": "off",
    "object-curly-newline": "off",
    "object-curly-spacing": "off",
    "object-property-newline": "off",
    "one-var-declaration-per-line": "off",
    "operator-linebreak": "off",
    "padded-blocks": "off",
    "quotes": "off",
    "rest-spread-spacing": "off",
    "semi": "off",
    "semi-spacing": "off",
    "semi-style": "off",
    "space-after-function-name": "off",
    "space-after-keywords": "off",
    "space-before-blocks": "off",
    "space-before-function-paren": "off",
    "space-before-function-parentheses": "off",
    "space-before-keywords": "off",
    "space-in-brackets": "off",
    "space-in-parens": "off",
    "space-infix-ops": "off",
    "space-return-throw-case": "off",
    "space-unary-ops": "off",
    "space-unary-word-ops": "off",
    "switch-colon-spacing": "off",
    "template-curly-spacing": "off",
    "template-tag-spacing": "off",
    "unicode-bom": "off",
    "wrap-iife": "off",
    "wrap-regex": "off",
    "yield-star-spacing": "off",
    "quote-props": ["warn", "consistent-as-needed"],
    "padding-line-between-statements": [
      "warn",
      { blankLine: "always", prev: "*", next: "return" },
    ],

    "unused-imports/no-unused-imports": "warn",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        vars: "all",
        varsIgnorePattern: "^_",
        args: "after-used",
        argsIgnorePattern: "^_",
      },
    ],

    "no-param-reassign": "off",
    "camelcase": "off",
    "no-sparse-arrays": "warn",
    "no-constant-condition": "warn",
    "no-debugger": "warn",
    "no-console": ["warn", { allow: ["warn", "warn", "table", "time"] }],
    "no-cond-assign": ["warn", "always"],
    "no-restricted-syntax": [
      "warn",
      "DebuggerStatement",
      "LabeledStatement",
      "WithStatement",
    ],
    "no-return-await": "off",

    // es6
    "no-var": "warn",
    "prefer-const": [
      "warn",
      {
        destructuring: "any",
        ignoreReadBeforeAssign: true,
      },
    ],
    "prefer-arrow-callback": [
      "warn",
      {
        allowNamedFunctions: false,
        allowUnboundThis: true,
      },
    ],
    "object-shorthand": [
      "warn",
      "always",
      {
        ignoreConstructors: false,
      },
    ],
    "prefer-exponentiation-operator": "warn",
    "prefer-rest-params": "warn",
    "prefer-spread": "warn",
    "prefer-template": "warn",
    "spaced-comment": [
      "warn",
      "always",
      {
        line: {
          markers: ["/"],
          exceptions: ["/", "#"],
        },
        block: {
          markers: ["!"],
          exceptions: ["*"],
          balanced: true,
        },
      },
    ],

    // best-practice
    "array-callback-return": "warn",
    "block-scoped-var": "warn",
    "consistent-return": "off",
    "complexity": ["off", 11],
    "eqeqeq": ["warn", "smart"],
    "no-alert": "warn",
    "no-case-declarations": "warn",
    "no-multi-str": "warn",
    "no-with": "warn",
    "no-useless-escape": "off",
    "no-invalid-this": "warn",
    "vars-on-top": "warn",
    "require-await": "off",
    "no-return-assign": "off",

    // unicorns
    "unicorn/error-message": "warn",
    "unicorn/escape-case": "warn",
    "unicorn/no-instanceof-array": "warn",
    "unicorn/no-new-buffer": "warn",
    "unicorn/no-unsafe-regex": "off",
    "unicorn/number-literal-case": "warn",
    "unicorn/numeric-separators-style": "warn",
    "unicorn/prefer-includes": "warn",
    "unicorn/prefer-string-starts-ends-with": "warn",
    "unicorn/prefer-text-content": "warn",
    "unicorn/prefer-type-error": "warn",
    "unicorn/prefer-node-protocol": "warn",
    "unicorn/throw-new-error": "warn",
    "unicorn/no-useless-spread": "warn",
    "unicorn/prefer-spread": "warn",
    "unicorn/prefer-set-size": "warn",
    "unicorn/prefer-string-slice": "warn",
    "unicorn/relative-url-style": ["warn", "always"],
    "unicorn/empty-brace-spaces": "warn",
    "unicorn/explicit-length-check": "warn",
    "unicorn/new-for-builtins": "warn",
    "unicorn/no-array-for-each": "warn",
    "unicorn/no-array-method-this-argument": "warn",
    "unicorn/no-for-loop": "warn",
    "unicorn/no-lonely-if": "warn",
    "unicorn/no-negated-condition": "warn",
    "unicorn/switch-case-braces": "warn",
    "unicorn/prefer-ternary": "warn",
    "unicorn/prefer-query-selector": "warn",
    "unicorn/prefer-modern-dom-apis": "warn",
    "unicorn/prefer-modern-math-apis": "warn",
    "unicorn/prefer-json-parse-buffer": "warn",
    "unicorn/prefer-date-now": "warn",
    "unicorn/prefer-array-some": "warn",
    "unicorn/prefer-array-index-of": "warn",
    "unicorn/prefer-array-flat": "warn",
    "unicorn/prefer-array-find": "warn",

    "no-use-before-define": [
      "warn",
      { functions: false, classes: false, variables: true },
    ],
    "eslint-comments/disable-enable-pair": "off",
    "import/no-named-as-default-member": "off",
    "n/no-callback-literal": "off",

    "sort-imports": [
      "warn",
      {
        ignoreCase: false,
        ignoreDeclarationSort: true,
        ignoreMemberSort: false,
        memberSyntaxSortOrder: ["none", "all", "multiple", "single"],
        allowSeparatedGroups: false,
      },
    ],

    // yml
    "yml/quotes": ["warn", { prefer: "double", avoidEscape: false }],
    "yml/no-empty-document": "off",

    // so1ve
    "@so1ve/import-dedupe": "warn",
    "@so1ve/no-useless-template-string": "warn",
    "@so1ve/no-negated-comparison": "warn",
    "@so1ve/pad-after-last-import": "warn",
    "@so1ve/function-style": "warn",

    "@so1ve/prettier/prettier": ["warn", prettierConfig],
  },
});
